def func3(arg29, arg30):
    var37 = var33(arg29, arg30)
    var41 = func7(var37, arg29)
    if var41 < arg29:
        var46 = class9()
    else:
        var46 = class11()
    for var47 in range(28):
        var46.func10(var37, arg30)
    var48 = (276256504 & ((arg29 ^ var37 - arg30 | -1457811354 | var37) ^ var37)) ^ var41
    var49 = ((var37 | (arg29 - (1269548872 & var41 ^ arg30))) ^ (((-60811964 & (var37 ^ ((var37 - ((var37 - arg29 - var41) | arg30)) | arg30 ^ var41) & -1957750084) - -1441153801) | var41 | 1417724732) - arg30) & var41 + arg30) - arg29
    result = arg30 - var37 - var49 & var49
    return result
class class11(object):
    def func10(self, arg44, arg45):
        return 0
class class9(class11):
    def func10(self, arg42, arg43):
        result = arg43 - 1
        return result
def func6(arg34, arg35):
    if arg34 < arg35:
        var36 = (arg35 + 929790326) - -291
    else:
        var36 = arg35 - arg34 + (67480083 ^ arg34 - 157 | (arg34 | (arg34 - -337 & arg35)))
    result = arg35 + arg34
    return result
def func5():
    closure = [-9]
    def func4(arg31, arg32):
        closure[0] += func6(arg31, arg32)
        return closure[0]
    func = func4
    return func
var33 = func5()
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = (arg1 ^ -1604837680) & 745 & 689
    var9 = arg1 - -1863063395 ^ 960
    var10 = (534756989 ^ (535 ^ arg2)) - 904408555
    var11 = -643899957 + var7
    var12 = var7 | var9
    var13 = ((arg1 ^ var12) ^ var12) - var12
    var14 = 457 - var11 | var7 - var11
    var15 = var7 ^ var12
    var16 = var11 - arg1
    var17 = var13 ^ -387810894 ^ -838 ^ -443657813
    var18 = var12 | 277 + var16 | 298
    var19 = (var9 | (-660088965 & var15)) - var8
    var20 = var11 ^ -314 + -962 | var17
    var21 = (var15 + arg1) & var12 + var8
    var22 = (var20 & var9 - var9) ^ var11
    var23 = var16 + arg1
    var24 = var17 & var17 + var17 | var21
    var25 = var23 - (arg2 ^ var11) & var22
    var26 = var21 + var7
    var27 = var21 & var21 & arg1 ^ var7
    var28 = (var7 ^ var17) + 558 - arg2
    result = arg2 + var13
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in ((i & arg3) + 7 for i in range(20)):
        var5 += arg3 - 9 & var6
    return var5
def func7(arg38, arg39):
    def func8(acc, rest):
        var40 = 1 ^ (1 | acc)
        if acc == 0:
            return var40
        else:
            result = func8(acc - 1, var40)
            return result
    result = func8(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 29'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 50'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg29, arg30):
    var37 = var33(arg29, arg30)
    var41 = func7(var37, arg29)
    if var41 < arg29:
        var46 = class9()
    else:
        var46 = class11()
    for var47 in range(28):
        var46.func10(var37, arg30)
    var48 = (276256504 & ((arg29 ^ var37 - arg30 | -1457811354 | var37) ^ var37)) ^ var41
    var49 = ((var37 | (arg29 - (1269548872 & var41 ^ arg30))) ^ (((-60811964 & (var37 ^ ((var37 - ((var37 - arg29 - var41) | arg30)) | arg30 ^ var41) & -1957750084) - -1441153801) | var41 | 1417724732) - arg30) & var41 + arg30) - arg29
    result = arg30 - var37 - var49 & var49
    return result
class class11(object):
    def func10(self, arg44, arg45):
        return 0
class class9(class11):
    def func10(self, arg42, arg43):
        result = arg43 - 1
        return result
def func6(arg34, arg35):
    if arg34 < arg35:
        var36 = (arg35 + 929790326) - -291
    else:
        var36 = arg35 - arg34 + (67480083 ^ arg34 - 157 | (arg34 | (arg34 - -337 & arg35)))
    result = arg35 + arg34
    return result
def func5():
    closure = [-9]
    def func4(arg31, arg32):
        closure[0] += func6(arg31, arg32)
        return closure[0]
    func = func4
    return func
var33 = func5()
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = (arg1 ^ -1604837680) & 745 & 689
    var9 = arg1 - -1863063395 ^ 960
    var10 = (534756989 ^ (535 ^ arg2)) - 904408555
    var11 = -643899957 + var7
    var12 = var7 | var9
    var13 = ((arg1 ^ var12) ^ var12) - var12
    var14 = 457 - var11 | var7 - var11
    var15 = var7 ^ var12
    var16 = var11 - arg1
    var17 = var13 ^ -387810894 ^ -838 ^ -443657813
    var18 = var12 | 277 + var16 | 298
    var19 = (var9 | (-660088965 & var15)) - var8
    var20 = var11 ^ -314 + -962 | var17
    var21 = (var15 + arg1) & var12 + var8
    var22 = (var20 & var9 - var9) ^ var11
    var23 = var16 + arg1
    var24 = var17 & var17 + var17 | var21
    var25 = var23 - (arg2 ^ var11) & var22
    var26 = var21 + var7
    var27 = var21 & var21 & arg1 ^ var7
    var28 = (var7 ^ var17) + 558 - arg2
    result = arg2 + var13
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in ((i & arg3) + 7 for i in range(20)):
        var5 += arg3 - 9 & var6
    return var5
def func7(arg38, arg39):
    def func8(acc, rest):
        var40 = 1 ^ (1 | acc)
        if acc == 0:
            return var40
        else:
            result = func8(acc - 1, var40)
            return result
    result = func8(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 29'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 50'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg29, arg30):
    var37 = var33(arg29, arg30)
    var41 = func7(var37, arg29)
    if var41 < arg29:
        var46 = class9()
    else:
        var46 = class11()
    for var47 in range(28):
        var46.func10(var37, arg30)
    var48 = (276256504 & ((arg29 ^ var37 - arg30 | -1457811354 | var37) ^ var37)) ^ var41
    var49 = ((var37 | (arg29 - (1269548872 & var41 ^ arg30))) ^ (((-60811964 & (var37 ^ ((var37 - ((var37 - arg29 - var41) | arg30)) | arg30 ^ var41) & -1957750084) - -1441153801) | var41 | 1417724732) - arg30) & var41 + arg30) - arg29
    result = arg30 - var37 - var49 & var49
    return result
class class11(object):
    def func10(self, arg44, arg45):
        return 0
class class9(class11):
    def func10(self, arg42, arg43):
        result = arg43 - 1
        return result
def func6(arg34, arg35):
    if arg34 < arg35:
        var36 = (arg35 + 929790326) - -291
    else:
        var36 = arg35 - arg34 + (67480083 ^ arg34 - 157 | (arg34 | (arg34 - -337 & arg35)))
    result = arg35 + arg34
    return result
def func5():
    closure = [-9]
    def func4(arg31, arg32):
        closure[0] += func6(arg31, arg32)
        return closure[0]
    func = func4
    return func
var33 = func5()
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = (arg1 ^ -1604837680) & 745 & 689
    var9 = arg1 - -1863063395 ^ 960
    var10 = (534756989 ^ (535 ^ arg2)) - 904408555
    var11 = -643899957 + var7
    var12 = var7 | var9
    var13 = ((arg1 ^ var12) ^ var12) - var12
    var14 = 457 - var11 | var7 - var11
    var15 = var7 ^ var12
    var16 = var11 - arg1
    var17 = var13 ^ -387810894 ^ -838 ^ -443657813
    var18 = var12 | 277 + var16 | 298
    var19 = (var9 | (-660088965 & var15)) - var8
    var20 = var11 ^ -314 + -962 | var17
    var21 = (var15 + arg1) & var12 + var8
    var22 = (var20 & var9 - var9) ^ var11
    var23 = var16 + arg1
    var24 = var17 & var17 + var17 | var21
    var25 = var23 - (arg2 ^ var11) & var22
    var26 = var21 + var7
    var27 = var21 & var21 & arg1 ^ var7
    var28 = (var7 ^ var17) + 558 - arg2
    result = arg2 + var13
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in ((i & arg3) + 7 for i in range(20)):
        var5 += arg3 - 9 & var6
    return var5
def func7(arg38, arg39):
    def func8(acc, rest):
        var40 = 1 ^ (1 | acc)
        if acc == 0:
            return var40
        else:
            result = func8(acc - 1, var40)
            return result
    result = func8(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 29'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 50'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg29, arg30):
    var37 = var33(arg29, arg30)
    var41 = func7(var37, arg29)
    if var41 < arg29:
        var46 = class9()
    else:
        var46 = class11()
    for var47 in range(28):
        var46.func10(var37, arg30)
    var48 = (276256504 & ((arg29 ^ var37 - arg30 | -1457811354 | var37) ^ var37)) ^ var41
    var49 = ((var37 | (arg29 - (1269548872 & var41 ^ arg30))) ^ (((-60811964 & (var37 ^ ((var37 - ((var37 - arg29 - var41) | arg30)) | arg30 ^ var41) & -1957750084) - -1441153801) | var41 | 1417724732) - arg30) & var41 + arg30) - arg29
    result = arg30 - var37 - var49 & var49
    return result
class class11(object):
    def func10(self, arg44, arg45):
        return 0
class class9(class11):
    def func10(self, arg42, arg43):
        result = arg43 - 1
        return result
def func6(arg34, arg35):
    if arg34 < arg35:
        var36 = (arg35 + 929790326) - -291
    else:
        var36 = arg35 - arg34 + (67480083 ^ arg34 - 157 | (arg34 | (arg34 - -337 & arg35)))
    result = arg35 + arg34
    return result
def func5():
    closure = [-9]
    def func4(arg31, arg32):
        closure[0] += func6(arg31, arg32)
        return closure[0]
    func = func4
    return func
var33 = func5()
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = (arg1 ^ -1604837680) & 745 & 689
    var9 = arg1 - -1863063395 ^ 960
    var10 = (534756989 ^ (535 ^ arg2)) - 904408555
    var11 = -643899957 + var7
    var12 = var7 | var9
    var13 = ((arg1 ^ var12) ^ var12) - var12
    var14 = 457 - var11 | var7 - var11
    var15 = var7 ^ var12
    var16 = var11 - arg1
    var17 = var13 ^ -387810894 ^ -838 ^ -443657813
    var18 = var12 | 277 + var16 | 298
    var19 = (var9 | (-660088965 & var15)) - var8
    var20 = var11 ^ -314 + -962 | var17
    var21 = (var15 + arg1) & var12 + var8
    var22 = (var20 & var9 - var9) ^ var11
    var23 = var16 + arg1
    var24 = var17 & var17 + var17 | var21
    var25 = var23 - (arg2 ^ var11) & var22
    var26 = var21 + var7
    var27 = var21 & var21 & arg1 ^ var7
    var28 = (var7 ^ var17) + 558 - arg2
    result = arg2 + var13
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in ((i & arg3) + 7 for i in range(20)):
        var5 += arg3 - 9 & var6
    return var5
def func7(arg38, arg39):
    def func8(acc, rest):
        var40 = 1 ^ (1 | acc)
        if acc == 0:
            return var40
        else:
            result = func8(acc - 1, var40)
            return result
    result = func8(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 29'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 50'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,def func3(arg29, arg30):
    var37 = var33(arg29, arg30)
    var41 = func7(var37, arg29)
    if var41 < arg29:
        var46 = class9()
    else:
        var46 = class11()
    for var47 in range(28):
        var46.func10(var37, arg30)
    var48 = (276256504 & ((arg29 ^ var37 - arg30 | -1457811354 | var37) ^ var37)) ^ var41
    var49 = ((var37 | (arg29 - (1269548872 & var41 ^ arg30))) ^ (((-60811964 & (var37 ^ ((var37 - ((var37 - arg29 - var41) | arg30)) | arg30 ^ var41) & -1957750084) - -1441153801) | var41 | 1417724732) - arg30) & var41 + arg30) - arg29
    result = arg30 - var37 - var49 & var49
    return result
class class11(object):
    def func10(self, arg44, arg45):
        return 0
class class9(class11):
    def func10(self, arg42, arg43):
        result = arg43 - 1
        return result
def func6(arg34, arg35):
    if arg34 < arg35:
        var36 = (arg35 + 929790326) - -291
    else:
        var36 = arg35 - arg34 + (67480083 ^ arg34 - 157 | (arg34 | (arg34 - -337 & arg35)))
    result = arg35 + arg34
    return result
def func5():
    closure = [-9]
    def func4(arg31, arg32):
        closure[0] += func6(arg31, arg32)
        return closure[0]
    func = func4
    return func
var33 = func5()
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = (arg1 ^ -1604837680) & 745 & 689
    var9 = arg1 - -1863063395 ^ 960
    var10 = (534756989 ^ (535 ^ arg2)) - 904408555
    var11 = -643899957 + var7
    var12 = var7 | var9
    var13 = ((arg1 ^ var12) ^ var12) - var12
    var14 = 457 - var11 | var7 - var11
    var15 = var7 ^ var12
    var16 = var11 - arg1
    var17 = var13 ^ -387810894 ^ -838 ^ -443657813
    var18 = var12 | 277 + var16 | 298
    var19 = (var9 | (-660088965 & var15)) - var8
    var20 = var11 ^ -314 + -962 | var17
    var21 = (var15 + arg1) & var12 + var8
    var22 = (var20 & var9 - var9) ^ var11
    var23 = var16 + arg1
    var24 = var17 & var17 + var17 | var21
    var25 = var23 - (arg2 ^ var11) & var22
    var26 = var21 + var7
    var27 = var21 & var21 & arg1 ^ var7
    var28 = (var7 ^ var17) + 558 - arg2
    result = arg2 + var13
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in ((i & arg3) + 7 for i in range(20)):
        var5 += arg3 - 9 & var6
    return var5
def func7(arg38, arg39):
    def func8(acc, rest):
        var40 = 1 ^ (1 | acc)
        if acc == 0:
            return var40
        else:
            result = func8(acc - 1, var40)
            return result
    result = func8(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 29'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 50'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
